val start=System.currentTimeMillis()
val a=sc.textFile("/root/nyse_prices/*")
val b=a.map(s=>s.split(","))
val c=b.map(s=>(s(0),s(1),s(2),s(3),s(4),s(5),s(6),s(7),s(8)))
val d=c.filter(s=>(s._2!="stock_symbol"))
val d1=d.filter(s=>(s._3.contains("2009")))
val e=d1.map(s=>(s._2,(s._7.toDouble-s._4.toDouble)))
val f=e.map(s=>(s._1,(if(s._2>0){"1".toInt}else{"0".toInt})))
val g=f.map(s=>(s._1,s._2,"1".toInt))
val h=g.map(s=>(s._1,(s._2,s._3)))
val i=h.reduceByKey((a,b)=>(a._1+b._1,a._2+b._2))
val j=i.map(s=>(s._1,((s._2._1.toDouble/s._2._2.toDouble)*100)))
val l=j.map(s=>((if(s._2.toDouble>67){"A"}else if(s._2.toDouble>40){"B"}else{"C"}),1))
val x=l.reduceByKey((a,b)=>a+b)
val end=System.currentTimeMillis()
val duration=(end-start)/1000